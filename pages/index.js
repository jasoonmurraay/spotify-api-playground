import Head from "next/head";
import "bootstrap/dist/css/bootstrap.css";
import { useEffect, useState } from "react";
import axios from "axios";
import Link from "next/link";
import Navbar from "@/components/Navbar";
import login from "./api/login";
import dotenv from "dotenv";

dotenv.config();

export default function Home() {
  const [token, setToken] = useState("");
  // const loginHandler = () => {
  //     login()
  // }

  useEffect(() => {
    const hash = window.location.hash;
    console.log("hash: ", hash);
    let token = window.localStorage.getItem("token");
    console.log("Token; ", token);
    if (!token && hash) {
      token = hash
        .substring(1)
        .split("&")
        .find((elem) => elem.startsWith("access_token"))
        .split("=")[1];
      window.location.hash = "";
      window.localStorage.setItem("token", token);
    }
    setToken(token);
  });
  const logoutHandler = (event) => {
    event.preventDefault();
    window.localStorage.removeItem("token");
  };

  const clientId = process.env.SPOTIFY_CLIENT_ID;
  const redirectUri = "http://localhost:3000";
  const authEndpoint = "https://accounts.spotify.com/authorize";
  const responseType = "token";
  return (
    <>
      <Head>
        <title>Spotify React </title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar isLoggedIn={token}></Navbar>
      <h1>Spotify React</h1>
      {!token ? (
        <button className="btn btn-primary">
          <a
            href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&response_type=${responseType}`}
          >
            Login to Spotify
          </a>
        </button>
      ) : (
        <button className="btn btn-warning" onClick={logoutHandler}>
          Logout
        </button>
      )}{" "}
      {token && (
        <button className="btn btn-success">
          <Link href="/artists">Search Artists</Link>
        </button>
      )}
    </>
  );
}
